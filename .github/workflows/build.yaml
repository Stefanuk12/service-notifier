name: Build and Publish Docker Container

on:
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  get-data:
    name: Read Cargo TOML
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Read Cargo TOML
        uses: SebRollen/toml-action@v1.0.2
        id: read_toml
        with:
          file: 'Cargo.toml'
          field: 'package.version'

    outputs:
      version: ${{ steps.read_toml.outputs.value }}
  
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: get-data
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
    steps:
        - name: Checkout
          uses: actions/checkout@master

        - name: Compile Rust
          id: compile
          uses: rust-build/rust-build.action@v1.4.3
          with:
            RUSTTARGET: ${{ matrix.target }}
            ARCHIVE_TYPES: ${{ matrix.archive }}
            TOOLCHAIN_VERSION: stable
            UPLOAD_MODE: none

        - name: Push Tag
          id: tag_version
          uses: mathieudutour/github-tag-action@v6.1
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            custom_tag: ${{ needs.get-data.outputs.version }}

        - name: Create Release
          uses: ncipollo/release-action@v1
          with:
            tag: ${{ steps.tag_version.outputs.new_tag }}
            name: Release ${{ steps.tag_version.outputs.new_tag }}
            artifacts: ${{ steps.compile.outputs.BUILT_ARCHIVE }}
  docker:
    name: Docker Publish
    runs-on: ubuntu-latest
    needs: get-data
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      
      - name: Calculate Docker Tags
        id: tags
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ format('{0}/{1}:latest,{0}/{1}:{2}', env.REGISTRY, env.IMAGE_NAME, needs.get-data.outputs.version) }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.tags.outputs.lowercase }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.tags.outputs.lowercase }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: |
          IFS=',' read -ra TAG_ARRAY <<< "${{ steps.tags.outputs.lowercase }}"
          for TAG in "${TAG_ARRAY[@]}"; do
            cosign sign --yes "${TAG}@${DIGEST}"
          done